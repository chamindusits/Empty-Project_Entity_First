<Project Sdk="Microsoft.NET.Sdk.Web">

	  <PropertyGroup>
		<TargetFramework>net8.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		  <SpaRoot>ClientApp\</SpaRoot>
		  <SpaProxyServerUrl>https://localhost:44477</SpaProxyServerUrl>
		<SpaProxyServerUrl>https://localhost:44477</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
	  </PropertyGroup>

	  <ItemGroup>
		<PackageReference Include="AutoMapper" Version="12.0.1" />
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="12.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.10" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="8.0.10" />
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy">
		  <Version>8.*-*</Version>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.10">
		  <PrivateAssets>all</PrivateAssets>
		  <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.1" />
		<PackageReference Include="NSwag.AspNetCore" Version="14.1.0" />
		<PackageReference Include="NSwag.Core" Version="14.1.0" />
		<PackageReference Include="Serilog.AspNetCore" Version="8.0.3" />
		<PackageReference Include="Serilog.Extensions.Hosting" Version="8.0.0" />
		<PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
		<PackageReference Include="Serilog.Settings.Configuration" Version="8.0.4" />
		<PackageReference Include="Serilog.Sinks.Async" Version="2.1.0" />
		<PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
		<PackageReference Include="Serilog.Sinks.EventLog" Version="4.0.0" />
		<PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
		<PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.9.0" />
	  </ItemGroup>
	
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\SITS.BNS.Application\SITS.BNS.Application.csproj" />
		<ProjectReference Include="..\SITS.BNS.Common\SITS.BNS.Common.csproj" />
		<ProjectReference Include="..\SITS.BNS.Infrastructure\SITS.BNS.Infrastructure.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="ClientApp\src\assets\img\admin\" />
		<Folder Include="Controllers\Common\" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --configuration production" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
		
</Project>
